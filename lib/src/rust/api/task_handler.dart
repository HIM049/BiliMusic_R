// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import '../task_modules.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These functions are ignored because they are not marked as `pub`: `from_task`

Future<void> createTempQueueFromCurrent() =>
    RustLib.instance.api.crateApiTaskHandlerCreateTempQueueFromCurrent();

Future<List<TempItem>> getTempQueue({required FilterOptions options}) =>
    RustLib.instance.api.crateApiTaskHandlerGetTempQueue(options: options);

Future<void> creatTasksFromTemp({required FilterOptions options}) => RustLib
    .instance
    .api
    .crateApiTaskHandlerCreatTasksFromTemp(options: options);

Future<List<Task>> taskQueueFilter({
  required List<Task> queue,
  required FilterOptions options,
}) => RustLib.instance.api.crateApiTaskHandlerTaskQueueFilter(
  queue: queue,
  options: options,
);

class FilterOptions {
  final bool isWithParts;

  const FilterOptions({required this.isWithParts});

  @override
  int get hashCode => isWithParts.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is FilterOptions &&
          runtimeType == other.runtimeType &&
          isWithParts == other.isWithParts;
}

class TempItem {
  final String title;
  final String partTitle;
  final String coverUrl;

  const TempItem({
    required this.title,
    required this.partTitle,
    required this.coverUrl,
  });

  @override
  int get hashCode => title.hashCode ^ partTitle.hashCode ^ coverUrl.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is TempItem &&
          runtimeType == other.runtimeType &&
          title == other.title &&
          partTitle == other.partTitle &&
          coverUrl == other.coverUrl;
}
